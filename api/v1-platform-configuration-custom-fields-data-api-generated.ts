/* tslint:disable */
/* eslint-disable */
/*
User Profile Details

Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

The version of the OpenAPI document: v1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * V1PlatformConfigurationCustomFieldsDataApi - axios parameter creator
 * @export
 */
export const V1PlatformConfigurationCustomFieldsDataApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Returns information about the UKG Pro Platform Configuration Custom Fields Data. Specifically, each of a classes\' custom fields and their respective values. The keyNames, keyValues, employment status, and fields vary and are dependent on the class in question. Classes marked \'(not emp specific)\' in the list below will not work with the employmentStatus parameter.<br />UKG Pro service account must have \"View\" role for the \"Personnel Integration\" Web Service.<br /><b>Supported classes</b>:<br />  1. Address<br />  2. Person<br />  3. PersonName<br />  4. Employee<br />  5. PhoneNumber<br />  6. Employment<br />  7. InternationalEmployee<br />  8. ComponentCompany - (not emp specific)<br />  9. Location - (not emp specific)<br />  10. Job -(not emp specific)<br />  11. OrgLevel1 - (not emp specific)<br />  12. OrgLevel2 - (not emp specific)<br />  13. OrgLevel3 - (not emp specific)<br />  14. OrgLevel4 - (not emp specific).
         * @summary Platform Configuration Fields Data v1
         * @param {string} className The name of a supported class, as listed above, to pull custom fields from.
         * @param {string} [keyName] Optional keyName to allow filtering results by the corresponding keyValue. keyNames are specific IDs that apply to the class in question.
         * @param {string} [keyValue] Optional keyValue. Allows filtering results to only include a specific keyValue(s). keyValues correspond to a supplied keyName.
         * @param {string} [fields] The exact name of a custom field or fields in a comma seperated list. Filters results to only fields with those names.
         * @param {string} [employmentStatus] Use in junction with employment specific queries to filter custom field results by an internal employment status.
         * @param {number} [page] Offsets results. Used with page number to allow filtering results to a specific range of custom fields.
         * @param {number} [perPage] Offsets results. Used with page to allow filtering results to a specific range of custom fields.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFieldsData: async (className: string, keyName?: string, keyValue?: string, fields?: string, employmentStatus?: string, page?: number, perPage?: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'className' is not null or undefined
            assertParamExists('getFieldsData', 'className', className)
            const localVarPath = `/personnel/v1/platform-configuration-fields/class-name/{className}`
                .replace(`{${"className"}}`, encodeURIComponent(String(className !== undefined ? className : `-className-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication OauthSecurity required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "OauthSecurity", ["recruiting.domain.third-party-job-board-integrations.auto-feed"], configuration)
            if (keyName !== undefined) {
                localVarQueryParameter['keyName'] = keyName;
            }

            if (keyValue !== undefined) {
                localVarQueryParameter['keyValue'] = keyValue;
            }

            if (fields !== undefined) {
                localVarQueryParameter['fields'] = fields;
            }

            if (employmentStatus !== undefined) {
                localVarQueryParameter['employmentStatus'] = employmentStatus;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (perPage !== undefined) {
                localVarQueryParameter['per_Page'] = perPage;
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/personnel/v1/platform-configuration-fields/class-name/{className}',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * V1PlatformConfigurationCustomFieldsDataApi - functional programming interface
 * @export
 */
export const V1PlatformConfigurationCustomFieldsDataApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = V1PlatformConfigurationCustomFieldsDataApiAxiosParamCreator(configuration)
    return {
        /**
         * Returns information about the UKG Pro Platform Configuration Custom Fields Data. Specifically, each of a classes\' custom fields and their respective values. The keyNames, keyValues, employment status, and fields vary and are dependent on the class in question. Classes marked \'(not emp specific)\' in the list below will not work with the employmentStatus parameter.<br />UKG Pro service account must have \"View\" role for the \"Personnel Integration\" Web Service.<br /><b>Supported classes</b>:<br />  1. Address<br />  2. Person<br />  3. PersonName<br />  4. Employee<br />  5. PhoneNumber<br />  6. Employment<br />  7. InternationalEmployee<br />  8. ComponentCompany - (not emp specific)<br />  9. Location - (not emp specific)<br />  10. Job -(not emp specific)<br />  11. OrgLevel1 - (not emp specific)<br />  12. OrgLevel2 - (not emp specific)<br />  13. OrgLevel3 - (not emp specific)<br />  14. OrgLevel4 - (not emp specific).
         * @summary Platform Configuration Fields Data v1
         * @param {V1PlatformConfigurationCustomFieldsDataApiGetFieldsDataRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getFieldsData(requestParameters: V1PlatformConfigurationCustomFieldsDataApiGetFieldsDataRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getFieldsData(requestParameters.className, requestParameters.keyName, requestParameters.keyValue, requestParameters.fields, requestParameters.employmentStatus, requestParameters.page, requestParameters.perPage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * V1PlatformConfigurationCustomFieldsDataApi - factory interface
 * @export
 */
export const V1PlatformConfigurationCustomFieldsDataApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = V1PlatformConfigurationCustomFieldsDataApiFp(configuration)
    return {
        /**
         * Returns information about the UKG Pro Platform Configuration Custom Fields Data. Specifically, each of a classes\' custom fields and their respective values. The keyNames, keyValues, employment status, and fields vary and are dependent on the class in question. Classes marked \'(not emp specific)\' in the list below will not work with the employmentStatus parameter.<br />UKG Pro service account must have \"View\" role for the \"Personnel Integration\" Web Service.<br /><b>Supported classes</b>:<br />  1. Address<br />  2. Person<br />  3. PersonName<br />  4. Employee<br />  5. PhoneNumber<br />  6. Employment<br />  7. InternationalEmployee<br />  8. ComponentCompany - (not emp specific)<br />  9. Location - (not emp specific)<br />  10. Job -(not emp specific)<br />  11. OrgLevel1 - (not emp specific)<br />  12. OrgLevel2 - (not emp specific)<br />  13. OrgLevel3 - (not emp specific)<br />  14. OrgLevel4 - (not emp specific).
         * @summary Platform Configuration Fields Data v1
         * @param {V1PlatformConfigurationCustomFieldsDataApiGetFieldsDataRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFieldsData(requestParameters: V1PlatformConfigurationCustomFieldsDataApiGetFieldsDataRequest, options?: AxiosRequestConfig): AxiosPromise<Array<UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData>> {
            return localVarFp.getFieldsData(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getFieldsData operation in V1PlatformConfigurationCustomFieldsDataApi.
 * @export
 * @interface V1PlatformConfigurationCustomFieldsDataApiGetFieldsDataRequest
 */
export type V1PlatformConfigurationCustomFieldsDataApiGetFieldsDataRequest = {
    
    /**
    * The name of a supported class, as listed above, to pull custom fields from.
    * @type {string}
    * @memberof V1PlatformConfigurationCustomFieldsDataApiGetFieldsData
    */
    readonly className: string
    
    /**
    * Optional keyName to allow filtering results by the corresponding keyValue. keyNames are specific IDs that apply to the class in question.
    * @type {string}
    * @memberof V1PlatformConfigurationCustomFieldsDataApiGetFieldsData
    */
    readonly keyName?: string
    
    /**
    * Optional keyValue. Allows filtering results to only include a specific keyValue(s). keyValues correspond to a supplied keyName.
    * @type {string}
    * @memberof V1PlatformConfigurationCustomFieldsDataApiGetFieldsData
    */
    readonly keyValue?: string
    
    /**
    * The exact name of a custom field or fields in a comma seperated list. Filters results to only fields with those names.
    * @type {string}
    * @memberof V1PlatformConfigurationCustomFieldsDataApiGetFieldsData
    */
    readonly fields?: string
    
    /**
    * Use in junction with employment specific queries to filter custom field results by an internal employment status.
    * @type {string}
    * @memberof V1PlatformConfigurationCustomFieldsDataApiGetFieldsData
    */
    readonly employmentStatus?: string
    
    /**
    * Offsets results. Used with page number to allow filtering results to a specific range of custom fields.
    * @type {number}
    * @memberof V1PlatformConfigurationCustomFieldsDataApiGetFieldsData
    */
    readonly page?: number
    
    /**
    * Offsets results. Used with page to allow filtering results to a specific range of custom fields.
    * @type {number}
    * @memberof V1PlatformConfigurationCustomFieldsDataApiGetFieldsData
    */
    readonly perPage?: number
    
}

/**
 * V1PlatformConfigurationCustomFieldsDataApiGenerated - object-oriented interface
 * @export
 * @class V1PlatformConfigurationCustomFieldsDataApiGenerated
 * @extends {BaseAPI}
 */
export class V1PlatformConfigurationCustomFieldsDataApiGenerated extends BaseAPI {
    /**
     * Returns information about the UKG Pro Platform Configuration Custom Fields Data. Specifically, each of a classes\' custom fields and their respective values. The keyNames, keyValues, employment status, and fields vary and are dependent on the class in question. Classes marked \'(not emp specific)\' in the list below will not work with the employmentStatus parameter.<br />UKG Pro service account must have \"View\" role for the \"Personnel Integration\" Web Service.<br /><b>Supported classes</b>:<br />  1. Address<br />  2. Person<br />  3. PersonName<br />  4. Employee<br />  5. PhoneNumber<br />  6. Employment<br />  7. InternationalEmployee<br />  8. ComponentCompany - (not emp specific)<br />  9. Location - (not emp specific)<br />  10. Job -(not emp specific)<br />  11. OrgLevel1 - (not emp specific)<br />  12. OrgLevel2 - (not emp specific)<br />  13. OrgLevel3 - (not emp specific)<br />  14. OrgLevel4 - (not emp specific).
     * @summary Platform Configuration Fields Data v1
     * @param {V1PlatformConfigurationCustomFieldsDataApiGetFieldsDataRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof V1PlatformConfigurationCustomFieldsDataApiGenerated
     */
    public getFieldsData(requestParameters: V1PlatformConfigurationCustomFieldsDataApiGetFieldsDataRequest, options?: AxiosRequestConfig) {
        return V1PlatformConfigurationCustomFieldsDataApiFp(this.configuration).getFieldsData(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
