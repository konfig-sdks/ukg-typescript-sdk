/* tslint:disable */
/* eslint-disable */
/*
User Profile Details

Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

The version of the OpenAPI document: v1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { DirectDepositModel } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * DirectDepositApi - axios parameter creator
 * @export
 */
export const DirectDepositApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Get list of direct deposit details for US and Canadian employees by company.   If no pagination parameters specified, the default/max is applied. Permissions - UltiPro service account must have \"View\" role for the \"Employee Direct Deposit\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  <ul>  <li>less than (=<)    <ul>    <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=<01-01-1900</li>    </ul>    </li> <li>greater than (=>)    <ul>    <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=>01-01-1900</li>   </ul>    </li> <li>equal to (=)    <ul>   <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=01-01-1900</li>    </ul>   </li> <li>between (={minimum date,maximum date})    <ul>   <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li>    </ul>    </li> </ul> 
         * @summary Get list of direct deposit details for US and Canadian employees by company
         * @param {string} companyId 
         * @param {string} [accountIsInactive] 
         * @param {string} [employeeId] 
         * @param {string} [companyId2] 
         * @param {string} [employeeBankRoutingNumber] 
         * @param {string} [countryCode] 
         * @param {string} [dateTimeChanged] Used to find direct deposit record changed date less than, greater than, equal to, or between passed date(s)
         * @param {number} [page] 
         * @param {number} [perPage] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDirectDepositDetailsByCompany: async (companyId: string, accountIsInactive?: string, employeeId?: string, companyId2?: string, employeeBankRoutingNumber?: string, countryCode?: string, dateTimeChanged?: string, page?: number, perPage?: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'companyId' is not null or undefined
            assertParamExists('listDirectDepositDetailsByCompany', 'companyId', companyId)
            const localVarPath = `/payroll/v1/companies/{companyId}/direct-deposit`
                .replace(`{${"companyId"}}`, encodeURIComponent(String(companyId !== undefined ? companyId : `-companyId-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication OauthSecurity required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "OauthSecurity", ["recruiting.domain.third-party-job-board-integrations.auto-feed"], configuration)
            if (accountIsInactive !== undefined) {
                localVarQueryParameter['accountIsInactive'] = accountIsInactive;
            }

            if (employeeId !== undefined) {
                localVarQueryParameter['employeeId'] = employeeId;
            }

            if (companyId2 !== undefined) {
                localVarQueryParameter['companyId'] = companyId2;
            }

            if (employeeBankRoutingNumber !== undefined) {
                localVarQueryParameter['employeeBankRoutingNumber'] = employeeBankRoutingNumber;
            }

            if (countryCode !== undefined) {
                localVarQueryParameter['countryCode'] = countryCode;
            }

            if (dateTimeChanged !== undefined) {
                localVarQueryParameter['dateTimeChanged'] = dateTimeChanged;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (perPage !== undefined) {
                localVarQueryParameter['per_Page'] = perPage;
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/payroll/v1/companies/{companyId}/direct-deposit',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get list of direct deposit details for US and Canadian employees.   If no pagination parameters specified, the default/max is applied. Permissions - UltiPro service account must have \"View\" role for the \"Employee Direct Deposit\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  <ul>  <li>less than (=<)    <ul>    <li>Example: /direct-deposit?dateTimeChanged=<01-01-1900</li>    </ul>    </li> <li>greater than (=>)    <ul>    <li>Example: /direct-deposit?dateTimeChanged=>01-01-1900</li>   </ul>    </li> <li>equal to (=)    <ul>   <li>Example: /direct-deposit?dateTimeChanged=01-01-1900</li>    </ul>   </li> <li>between (={minimum date,maximum date})    <ul>   <li>Example: /direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li>    </ul>    </li> </ul> 
         * @summary Get list of direct deposit details for US and Canadian employees
         * @param {string} [accountIsInactive] 
         * @param {string} [employeeId] 
         * @param {string} [companyId] 
         * @param {string} [employeeBankRoutingNumber] 
         * @param {string} [countryCode] 
         * @param {string} [dateTimeChanged] Used to find direct deposit record changed date less than, greater than, equal to, or between passed date(s)
         * @param {number} [page] 
         * @param {number} [perPage] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listEmployeeDirectDepositDetails: async (accountIsInactive?: string, employeeId?: string, companyId?: string, employeeBankRoutingNumber?: string, countryCode?: string, dateTimeChanged?: string, page?: number, perPage?: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/payroll/v1/direct-deposit`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication OauthSecurity required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "OauthSecurity", ["recruiting.domain.third-party-job-board-integrations.auto-feed"], configuration)
            if (accountIsInactive !== undefined) {
                localVarQueryParameter['accountIsInactive'] = accountIsInactive;
            }

            if (employeeId !== undefined) {
                localVarQueryParameter['employeeId'] = employeeId;
            }

            if (companyId !== undefined) {
                localVarQueryParameter['companyId'] = companyId;
            }

            if (employeeBankRoutingNumber !== undefined) {
                localVarQueryParameter['employeeBankRoutingNumber'] = employeeBankRoutingNumber;
            }

            if (countryCode !== undefined) {
                localVarQueryParameter['countryCode'] = countryCode;
            }

            if (dateTimeChanged !== undefined) {
                localVarQueryParameter['dateTimeChanged'] = dateTimeChanged;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (perPage !== undefined) {
                localVarQueryParameter['per_Page'] = perPage;
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/payroll/v1/direct-deposit',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DirectDepositApi - functional programming interface
 * @export
 */
export const DirectDepositApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = DirectDepositApiAxiosParamCreator(configuration)
    return {
        /**
         * Get list of direct deposit details for US and Canadian employees by company.   If no pagination parameters specified, the default/max is applied. Permissions - UltiPro service account must have \"View\" role for the \"Employee Direct Deposit\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  <ul>  <li>less than (=<)    <ul>    <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=<01-01-1900</li>    </ul>    </li> <li>greater than (=>)    <ul>    <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=>01-01-1900</li>   </ul>    </li> <li>equal to (=)    <ul>   <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=01-01-1900</li>    </ul>   </li> <li>between (={minimum date,maximum date})    <ul>   <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li>    </ul>    </li> </ul> 
         * @summary Get list of direct deposit details for US and Canadian employees by company
         * @param {DirectDepositApiListDirectDepositDetailsByCompanyRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listDirectDepositDetailsByCompany(requestParameters: DirectDepositApiListDirectDepositDetailsByCompanyRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<DirectDepositModel>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listDirectDepositDetailsByCompany(requestParameters.companyId, requestParameters.accountIsInactive, requestParameters.employeeId, requestParameters.companyId2, requestParameters.employeeBankRoutingNumber, requestParameters.countryCode, requestParameters.dateTimeChanged, requestParameters.page, requestParameters.perPage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get list of direct deposit details for US and Canadian employees.   If no pagination parameters specified, the default/max is applied. Permissions - UltiPro service account must have \"View\" role for the \"Employee Direct Deposit\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  <ul>  <li>less than (=<)    <ul>    <li>Example: /direct-deposit?dateTimeChanged=<01-01-1900</li>    </ul>    </li> <li>greater than (=>)    <ul>    <li>Example: /direct-deposit?dateTimeChanged=>01-01-1900</li>   </ul>    </li> <li>equal to (=)    <ul>   <li>Example: /direct-deposit?dateTimeChanged=01-01-1900</li>    </ul>   </li> <li>between (={minimum date,maximum date})    <ul>   <li>Example: /direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li>    </ul>    </li> </ul> 
         * @summary Get list of direct deposit details for US and Canadian employees
         * @param {DirectDepositApiListEmployeeDirectDepositDetailsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listEmployeeDirectDepositDetails(requestParameters: DirectDepositApiListEmployeeDirectDepositDetailsRequest = {}, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<DirectDepositModel>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listEmployeeDirectDepositDetails(requestParameters.accountIsInactive, requestParameters.employeeId, requestParameters.companyId, requestParameters.employeeBankRoutingNumber, requestParameters.countryCode, requestParameters.dateTimeChanged, requestParameters.page, requestParameters.perPage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * DirectDepositApi - factory interface
 * @export
 */
export const DirectDepositApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = DirectDepositApiFp(configuration)
    return {
        /**
         * Get list of direct deposit details for US and Canadian employees by company.   If no pagination parameters specified, the default/max is applied. Permissions - UltiPro service account must have \"View\" role for the \"Employee Direct Deposit\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  <ul>  <li>less than (=<)    <ul>    <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=<01-01-1900</li>    </ul>    </li> <li>greater than (=>)    <ul>    <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=>01-01-1900</li>   </ul>    </li> <li>equal to (=)    <ul>   <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=01-01-1900</li>    </ul>   </li> <li>between (={minimum date,maximum date})    <ul>   <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li>    </ul>    </li> </ul> 
         * @summary Get list of direct deposit details for US and Canadian employees by company
         * @param {DirectDepositApiListDirectDepositDetailsByCompanyRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listDirectDepositDetailsByCompany(requestParameters: DirectDepositApiListDirectDepositDetailsByCompanyRequest, options?: AxiosRequestConfig): AxiosPromise<Array<DirectDepositModel>> {
            return localVarFp.listDirectDepositDetailsByCompany(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Get list of direct deposit details for US and Canadian employees.   If no pagination parameters specified, the default/max is applied. Permissions - UltiPro service account must have \"View\" role for the \"Employee Direct Deposit\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  <ul>  <li>less than (=<)    <ul>    <li>Example: /direct-deposit?dateTimeChanged=<01-01-1900</li>    </ul>    </li> <li>greater than (=>)    <ul>    <li>Example: /direct-deposit?dateTimeChanged=>01-01-1900</li>   </ul>    </li> <li>equal to (=)    <ul>   <li>Example: /direct-deposit?dateTimeChanged=01-01-1900</li>    </ul>   </li> <li>between (={minimum date,maximum date})    <ul>   <li>Example: /direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li>    </ul>    </li> </ul> 
         * @summary Get list of direct deposit details for US and Canadian employees
         * @param {DirectDepositApiListEmployeeDirectDepositDetailsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listEmployeeDirectDepositDetails(requestParameters: DirectDepositApiListEmployeeDirectDepositDetailsRequest = {}, options?: AxiosRequestConfig): AxiosPromise<Array<DirectDepositModel>> {
            return localVarFp.listEmployeeDirectDepositDetails(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for listDirectDepositDetailsByCompany operation in DirectDepositApi.
 * @export
 * @interface DirectDepositApiListDirectDepositDetailsByCompanyRequest
 */
export type DirectDepositApiListDirectDepositDetailsByCompanyRequest = {
    
    /**
    * 
    * @type {string}
    * @memberof DirectDepositApiListDirectDepositDetailsByCompany
    */
    readonly companyId: string
    
    /**
    * 
    * @type {string}
    * @memberof DirectDepositApiListDirectDepositDetailsByCompany
    */
    readonly accountIsInactive?: string
    
    /**
    * 
    * @type {string}
    * @memberof DirectDepositApiListDirectDepositDetailsByCompany
    */
    readonly employeeId?: string
    
    /**
    * 
    * @type {string}
    * @memberof DirectDepositApiListDirectDepositDetailsByCompany
    */
    readonly companyId2?: string
    
    /**
    * 
    * @type {string}
    * @memberof DirectDepositApiListDirectDepositDetailsByCompany
    */
    readonly employeeBankRoutingNumber?: string
    
    /**
    * 
    * @type {string}
    * @memberof DirectDepositApiListDirectDepositDetailsByCompany
    */
    readonly countryCode?: string
    
    /**
    * Used to find direct deposit record changed date less than, greater than, equal to, or between passed date(s)
    * @type {string}
    * @memberof DirectDepositApiListDirectDepositDetailsByCompany
    */
    readonly dateTimeChanged?: string
    
    /**
    * 
    * @type {number}
    * @memberof DirectDepositApiListDirectDepositDetailsByCompany
    */
    readonly page?: number
    
    /**
    * 
    * @type {number}
    * @memberof DirectDepositApiListDirectDepositDetailsByCompany
    */
    readonly perPage?: number
    
}

/**
 * Request parameters for listEmployeeDirectDepositDetails operation in DirectDepositApi.
 * @export
 * @interface DirectDepositApiListEmployeeDirectDepositDetailsRequest
 */
export type DirectDepositApiListEmployeeDirectDepositDetailsRequest = {
    
    /**
    * 
    * @type {string}
    * @memberof DirectDepositApiListEmployeeDirectDepositDetails
    */
    readonly accountIsInactive?: string
    
    /**
    * 
    * @type {string}
    * @memberof DirectDepositApiListEmployeeDirectDepositDetails
    */
    readonly employeeId?: string
    
    /**
    * 
    * @type {string}
    * @memberof DirectDepositApiListEmployeeDirectDepositDetails
    */
    readonly companyId?: string
    
    /**
    * 
    * @type {string}
    * @memberof DirectDepositApiListEmployeeDirectDepositDetails
    */
    readonly employeeBankRoutingNumber?: string
    
    /**
    * 
    * @type {string}
    * @memberof DirectDepositApiListEmployeeDirectDepositDetails
    */
    readonly countryCode?: string
    
    /**
    * Used to find direct deposit record changed date less than, greater than, equal to, or between passed date(s)
    * @type {string}
    * @memberof DirectDepositApiListEmployeeDirectDepositDetails
    */
    readonly dateTimeChanged?: string
    
    /**
    * 
    * @type {number}
    * @memberof DirectDepositApiListEmployeeDirectDepositDetails
    */
    readonly page?: number
    
    /**
    * 
    * @type {number}
    * @memberof DirectDepositApiListEmployeeDirectDepositDetails
    */
    readonly perPage?: number
    
}

/**
 * DirectDepositApiGenerated - object-oriented interface
 * @export
 * @class DirectDepositApiGenerated
 * @extends {BaseAPI}
 */
export class DirectDepositApiGenerated extends BaseAPI {
    /**
     * Get list of direct deposit details for US and Canadian employees by company.   If no pagination parameters specified, the default/max is applied. Permissions - UltiPro service account must have \"View\" role for the \"Employee Direct Deposit\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  <ul>  <li>less than (=<)    <ul>    <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=<01-01-1900</li>    </ul>    </li> <li>greater than (=>)    <ul>    <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=>01-01-1900</li>   </ul>    </li> <li>equal to (=)    <ul>   <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=01-01-1900</li>    </ul>   </li> <li>between (={minimum date,maximum date})    <ul>   <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li>    </ul>    </li> </ul> 
     * @summary Get list of direct deposit details for US and Canadian employees by company
     * @param {DirectDepositApiListDirectDepositDetailsByCompanyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectDepositApiGenerated
     */
    public listDirectDepositDetailsByCompany(requestParameters: DirectDepositApiListDirectDepositDetailsByCompanyRequest, options?: AxiosRequestConfig) {
        return DirectDepositApiFp(this.configuration).listDirectDepositDetailsByCompany(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get list of direct deposit details for US and Canadian employees.   If no pagination parameters specified, the default/max is applied. Permissions - UltiPro service account must have \"View\" role for the \"Employee Direct Deposit\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  <ul>  <li>less than (=<)    <ul>    <li>Example: /direct-deposit?dateTimeChanged=<01-01-1900</li>    </ul>    </li> <li>greater than (=>)    <ul>    <li>Example: /direct-deposit?dateTimeChanged=>01-01-1900</li>   </ul>    </li> <li>equal to (=)    <ul>   <li>Example: /direct-deposit?dateTimeChanged=01-01-1900</li>    </ul>   </li> <li>between (={minimum date,maximum date})    <ul>   <li>Example: /direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li>    </ul>    </li> </ul> 
     * @summary Get list of direct deposit details for US and Canadian employees
     * @param {DirectDepositApiListEmployeeDirectDepositDetailsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectDepositApiGenerated
     */
    public listEmployeeDirectDepositDetails(requestParameters: DirectDepositApiListEmployeeDirectDepositDetailsRequest = {}, options?: AxiosRequestConfig) {
        return DirectDepositApiFp(this.configuration).listEmployeeDirectDepositDetails(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
