/* tslint:disable */
/* eslint-disable */
/*
User Profile Details

Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

The version of the OpenAPI document: v1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { PayrollDeductionsHistory } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * PayrollDeductionsHistoryApi - axios parameter creator
 * @export
 */
export const PayrollDeductionsHistoryApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * If no pagination parameters specified, the default/max is applied. Permissions - UKG Pro service account must have \"View\" role for the \"Payroll Integration\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). 
         * @summary Get Payroll Deductions History
         * @param {string} [employeeId] 
         * @param {string} [companyId] 
         * @param {string} [checkId] 
         * @param {string} [employeeNumber] 
         * @param {string} [deductionCode] 
         * @param {string} [deductionType] 
         * @param {string} [benefitOption] 
         * @param {string} [benefitProvider] 
         * @param {string} [payGroup] 
         * @param {string} [periodControl] 
         * @param {string} [payDate] 
         * @param {string} [is401K] 
         * @param {string} [is403B] 
         * @param {string} [is408K] 
         * @param {string} [is408P] 
         * @param {string} [is457] 
         * @param {string} [is457B] 
         * @param {string} [is457F] 
         * @param {string} [is501C] 
         * @param {string} [isD125] 
         * @param {string} [isDeductionOffSet] 
         * @param {string} [isDeferredCompensation] 
         * @param {string} [isDependentCare] 
         * @param {string} [isHousing] 
         * @param {string} [isNonQualifiedPlan] 
         * @param {string} [startPerControl] 
         * @param {string} [endPerControl] 
         * @param {number} [page] 
         * @param {number} [perPage] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        get: async (employeeId?: string, companyId?: string, checkId?: string, employeeNumber?: string, deductionCode?: string, deductionType?: string, benefitOption?: string, benefitProvider?: string, payGroup?: string, periodControl?: string, payDate?: string, is401K?: string, is403B?: string, is408K?: string, is408P?: string, is457?: string, is457B?: string, is457F?: string, is501C?: string, isD125?: string, isDeductionOffSet?: string, isDeferredCompensation?: string, isDependentCare?: string, isHousing?: string, isNonQualifiedPlan?: string, startPerControl?: string, endPerControl?: string, page?: number, perPage?: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/payroll/v1/payroll-deductions-history`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication OauthSecurity required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "OauthSecurity", ["recruiting.domain.third-party-job-board-integrations.auto-feed"], configuration)
            if (employeeId !== undefined) {
                localVarQueryParameter['employeeId'] = employeeId;
            }

            if (companyId !== undefined) {
                localVarQueryParameter['companyId'] = companyId;
            }

            if (checkId !== undefined) {
                localVarQueryParameter['checkId'] = checkId;
            }

            if (employeeNumber !== undefined) {
                localVarQueryParameter['employeeNumber'] = employeeNumber;
            }

            if (deductionCode !== undefined) {
                localVarQueryParameter['deductionCode'] = deductionCode;
            }

            if (deductionType !== undefined) {
                localVarQueryParameter['deductionType'] = deductionType;
            }

            if (benefitOption !== undefined) {
                localVarQueryParameter['benefitOption'] = benefitOption;
            }

            if (benefitProvider !== undefined) {
                localVarQueryParameter['benefitProvider'] = benefitProvider;
            }

            if (payGroup !== undefined) {
                localVarQueryParameter['payGroup'] = payGroup;
            }

            if (periodControl !== undefined) {
                localVarQueryParameter['periodControl'] = periodControl;
            }

            if (payDate !== undefined) {
                localVarQueryParameter['payDate'] = (payDate as any instanceof Date) ?
                    (payDate as any).toISOString() :
                    payDate;
            }

            if (is401K !== undefined) {
                localVarQueryParameter['is401K'] = is401K;
            }

            if (is403B !== undefined) {
                localVarQueryParameter['is403B'] = is403B;
            }

            if (is408K !== undefined) {
                localVarQueryParameter['is408K'] = is408K;
            }

            if (is408P !== undefined) {
                localVarQueryParameter['is408P'] = is408P;
            }

            if (is457 !== undefined) {
                localVarQueryParameter['is457'] = is457;
            }

            if (is457B !== undefined) {
                localVarQueryParameter['is457B'] = is457B;
            }

            if (is457F !== undefined) {
                localVarQueryParameter['is457F'] = is457F;
            }

            if (is501C !== undefined) {
                localVarQueryParameter['is501C'] = is501C;
            }

            if (isD125 !== undefined) {
                localVarQueryParameter['isD125'] = isD125;
            }

            if (isDeductionOffSet !== undefined) {
                localVarQueryParameter['isDeductionOffSet'] = isDeductionOffSet;
            }

            if (isDeferredCompensation !== undefined) {
                localVarQueryParameter['isDeferredCompensation'] = isDeferredCompensation;
            }

            if (isDependentCare !== undefined) {
                localVarQueryParameter['isDependentCare'] = isDependentCare;
            }

            if (isHousing !== undefined) {
                localVarQueryParameter['isHousing'] = isHousing;
            }

            if (isNonQualifiedPlan !== undefined) {
                localVarQueryParameter['isNonQualifiedPlan'] = isNonQualifiedPlan;
            }

            if (startPerControl !== undefined) {
                localVarQueryParameter['startPerControl'] = startPerControl;
            }

            if (endPerControl !== undefined) {
                localVarQueryParameter['endPerControl'] = endPerControl;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (perPage !== undefined) {
                localVarQueryParameter['per_Page'] = perPage;
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/payroll/v1/payroll-deductions-history',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * PayrollDeductionsHistoryApi - functional programming interface
 * @export
 */
export const PayrollDeductionsHistoryApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = PayrollDeductionsHistoryApiAxiosParamCreator(configuration)
    return {
        /**
         * If no pagination parameters specified, the default/max is applied. Permissions - UKG Pro service account must have \"View\" role for the \"Payroll Integration\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). 
         * @summary Get Payroll Deductions History
         * @param {PayrollDeductionsHistoryApiGetRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async get(requestParameters: PayrollDeductionsHistoryApiGetRequest = {}, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<PayrollDeductionsHistory>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.get(requestParameters.employeeId, requestParameters.companyId, requestParameters.checkId, requestParameters.employeeNumber, requestParameters.deductionCode, requestParameters.deductionType, requestParameters.benefitOption, requestParameters.benefitProvider, requestParameters.payGroup, requestParameters.periodControl, requestParameters.payDate, requestParameters.is401K, requestParameters.is403B, requestParameters.is408K, requestParameters.is408P, requestParameters.is457, requestParameters.is457B, requestParameters.is457F, requestParameters.is501C, requestParameters.isD125, requestParameters.isDeductionOffSet, requestParameters.isDeferredCompensation, requestParameters.isDependentCare, requestParameters.isHousing, requestParameters.isNonQualifiedPlan, requestParameters.startPerControl, requestParameters.endPerControl, requestParameters.page, requestParameters.perPage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * PayrollDeductionsHistoryApi - factory interface
 * @export
 */
export const PayrollDeductionsHistoryApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = PayrollDeductionsHistoryApiFp(configuration)
    return {
        /**
         * If no pagination parameters specified, the default/max is applied. Permissions - UKG Pro service account must have \"View\" role for the \"Payroll Integration\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). 
         * @summary Get Payroll Deductions History
         * @param {PayrollDeductionsHistoryApiGetRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        get(requestParameters: PayrollDeductionsHistoryApiGetRequest = {}, options?: AxiosRequestConfig): AxiosPromise<Array<PayrollDeductionsHistory>> {
            return localVarFp.get(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for get operation in PayrollDeductionsHistoryApi.
 * @export
 * @interface PayrollDeductionsHistoryApiGetRequest
 */
export type PayrollDeductionsHistoryApiGetRequest = {
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly employeeId?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly companyId?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly checkId?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly employeeNumber?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly deductionCode?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly deductionType?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly benefitOption?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly benefitProvider?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly payGroup?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly periodControl?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly payDate?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly is401K?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly is403B?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly is408K?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly is408P?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly is457?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly is457B?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly is457F?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly is501C?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly isD125?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly isDeductionOffSet?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly isDeferredCompensation?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly isDependentCare?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly isHousing?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly isNonQualifiedPlan?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly startPerControl?: string
    
    /**
    * 
    * @type {string}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly endPerControl?: string
    
    /**
    * 
    * @type {number}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly page?: number
    
    /**
    * 
    * @type {number}
    * @memberof PayrollDeductionsHistoryApiGet
    */
    readonly perPage?: number
    
}

/**
 * PayrollDeductionsHistoryApiGenerated - object-oriented interface
 * @export
 * @class PayrollDeductionsHistoryApiGenerated
 * @extends {BaseAPI}
 */
export class PayrollDeductionsHistoryApiGenerated extends BaseAPI {
    /**
     * If no pagination parameters specified, the default/max is applied. Permissions - UKG Pro service account must have \"View\" role for the \"Payroll Integration\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). 
     * @summary Get Payroll Deductions History
     * @param {PayrollDeductionsHistoryApiGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PayrollDeductionsHistoryApiGenerated
     */
    public get(requestParameters: PayrollDeductionsHistoryApiGetRequest = {}, options?: AxiosRequestConfig) {
        return PayrollDeductionsHistoryApiFp(this.configuration).get(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
