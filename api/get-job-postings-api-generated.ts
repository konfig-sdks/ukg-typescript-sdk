/* tslint:disable */
/* eslint-disable */
/*
User Profile Details

Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

The version of the OpenAPI document: v1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { PostingsInner } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * GetJobPostingsApi - axios parameter creator
 * @export
 */
export const GetJobPostingsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * The Job Postings API returns detailed information about jobs in UltiPro Recruiting such as title, description, compensation, available locations, company, talent factors like skills, work experience, education, licenses, behaviors and motivations, the published date, and the url to the job on UltiPro\'s Recruiting. Consumers should iterate through the pages until no more records are returned.   The \"company\" property contains \"name\" and \"doing_business_as\", if the company name needs to be publicly exposed, the \"doing_business_as\" name should be used. Some properties may have several translations available, the possible language codes are: en_us, en_gb, es_es, fr_ca, de_de, and pr_br. 
         * @summary Get job postings
         * @param {string} integrationId A unique integration id provided by Ultimate Software to the Partner during the integration registration process. 
         * @param {number} [page] Pagination page number
         * @param {number} [perPage] Pagination amount of records per page to display
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        details: async (integrationId: string, page?: number, perPage?: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'integrationId' is not null or undefined
            assertParamExists('details', 'integrationId', integrationId)
            const localVarPath = `/talent/recruiting/v2/third-party-job-board-integrations/{integrationId}/postings`
                .replace(`{${"integrationId"}}`, encodeURIComponent(String(integrationId !== undefined ? integrationId : `-integrationId-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication OauthSecurity required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "OauthSecurity", ["recruiting.domain.third-party-job-board-integrations.auto-feed"], configuration)
            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (perPage !== undefined) {
                localVarQueryParameter['per_page'] = perPage;
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/talent/recruiting/v2/third-party-job-board-integrations/{integrationId}/postings',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * GetJobPostingsApi - functional programming interface
 * @export
 */
export const GetJobPostingsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = GetJobPostingsApiAxiosParamCreator(configuration)
    return {
        /**
         * The Job Postings API returns detailed information about jobs in UltiPro Recruiting such as title, description, compensation, available locations, company, talent factors like skills, work experience, education, licenses, behaviors and motivations, the published date, and the url to the job on UltiPro\'s Recruiting. Consumers should iterate through the pages until no more records are returned.   The \"company\" property contains \"name\" and \"doing_business_as\", if the company name needs to be publicly exposed, the \"doing_business_as\" name should be used. Some properties may have several translations available, the possible language codes are: en_us, en_gb, es_es, fr_ca, de_de, and pr_br. 
         * @summary Get job postings
         * @param {GetJobPostingsApiDetailsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async details(requestParameters: GetJobPostingsApiDetailsRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<PostingsInner>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.details(requestParameters.integrationId, requestParameters.page, requestParameters.perPage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * GetJobPostingsApi - factory interface
 * @export
 */
export const GetJobPostingsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = GetJobPostingsApiFp(configuration)
    return {
        /**
         * The Job Postings API returns detailed information about jobs in UltiPro Recruiting such as title, description, compensation, available locations, company, talent factors like skills, work experience, education, licenses, behaviors and motivations, the published date, and the url to the job on UltiPro\'s Recruiting. Consumers should iterate through the pages until no more records are returned.   The \"company\" property contains \"name\" and \"doing_business_as\", if the company name needs to be publicly exposed, the \"doing_business_as\" name should be used. Some properties may have several translations available, the possible language codes are: en_us, en_gb, es_es, fr_ca, de_de, and pr_br. 
         * @summary Get job postings
         * @param {GetJobPostingsApiDetailsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        details(requestParameters: GetJobPostingsApiDetailsRequest, options?: AxiosRequestConfig): AxiosPromise<Array<PostingsInner>> {
            return localVarFp.details(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for details operation in GetJobPostingsApi.
 * @export
 * @interface GetJobPostingsApiDetailsRequest
 */
export type GetJobPostingsApiDetailsRequest = {
    
    /**
    * A unique integration id provided by Ultimate Software to the Partner during the integration registration process. 
    * @type {string}
    * @memberof GetJobPostingsApiDetails
    */
    readonly integrationId: string
    
    /**
    * Pagination page number
    * @type {number}
    * @memberof GetJobPostingsApiDetails
    */
    readonly page?: number
    
    /**
    * Pagination amount of records per page to display
    * @type {number}
    * @memberof GetJobPostingsApiDetails
    */
    readonly perPage?: number
    
}

/**
 * GetJobPostingsApiGenerated - object-oriented interface
 * @export
 * @class GetJobPostingsApiGenerated
 * @extends {BaseAPI}
 */
export class GetJobPostingsApiGenerated extends BaseAPI {
    /**
     * The Job Postings API returns detailed information about jobs in UltiPro Recruiting such as title, description, compensation, available locations, company, talent factors like skills, work experience, education, licenses, behaviors and motivations, the published date, and the url to the job on UltiPro\'s Recruiting. Consumers should iterate through the pages until no more records are returned.   The \"company\" property contains \"name\" and \"doing_business_as\", if the company name needs to be publicly exposed, the \"doing_business_as\" name should be used. Some properties may have several translations available, the possible language codes are: en_us, en_gb, es_es, fr_ca, de_de, and pr_br. 
     * @summary Get job postings
     * @param {GetJobPostingsApiDetailsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GetJobPostingsApiGenerated
     */
    public details(requestParameters: GetJobPostingsApiDetailsRequest, options?: AxiosRequestConfig) {
        return GetJobPostingsApiFp(this.configuration).details(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
