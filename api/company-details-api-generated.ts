/* tslint:disable */
/* eslint-disable */
/*
User Profile Details

Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

The version of the OpenAPI document: v1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { CompanyDetails } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * CompanyDetailsApi - axios parameter creator
 * @export
 */
export const CompanyDetailsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Get all master company and component company details. If no pagination parameters specified, the default/max is applied. Permissions - UKG Pro service account must have \"View\" role for the \"Company Configuration Integration\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}).
         * @summary Get Company Details
         * @param {string} [companyId] 5 character value represents a UKG Pro CompanyID
         * @param {string} [masterCompanyId] 5 character value represents a UKG Pro Master CompanyID
         * @param {string} [companyCode] 5 character value represents a UKG Pro Company Code
         * @param {string} [isMasterCompany] true/false values represent if this company is a UKG Pro Master Company
         * @param {number} [page] 
         * @param {number} [perPage] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCompanyDetails: async (companyId?: string, masterCompanyId?: string, companyCode?: string, isMasterCompany?: string, page?: number, perPage?: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/configuration/v1/company-details`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication OauthSecurity required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "OauthSecurity", ["recruiting.domain.third-party-job-board-integrations.auto-feed"], configuration)
            if (companyId !== undefined) {
                localVarQueryParameter['companyId'] = companyId;
            }

            if (masterCompanyId !== undefined) {
                localVarQueryParameter['masterCompanyId'] = masterCompanyId;
            }

            if (companyCode !== undefined) {
                localVarQueryParameter['companyCode'] = companyCode;
            }

            if (isMasterCompany !== undefined) {
                localVarQueryParameter['isMasterCompany'] = isMasterCompany;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (perPage !== undefined) {
                localVarQueryParameter['per_Page'] = perPage;
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/configuration/v1/company-details',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CompanyDetailsApi - functional programming interface
 * @export
 */
export const CompanyDetailsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = CompanyDetailsApiAxiosParamCreator(configuration)
    return {
        /**
         * Get all master company and component company details. If no pagination parameters specified, the default/max is applied. Permissions - UKG Pro service account must have \"View\" role for the \"Company Configuration Integration\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}).
         * @summary Get Company Details
         * @param {CompanyDetailsApiGetCompanyDetailsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCompanyDetails(requestParameters: CompanyDetailsApiGetCompanyDetailsRequest = {}, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<CompanyDetails>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCompanyDetails(requestParameters.companyId, requestParameters.masterCompanyId, requestParameters.companyCode, requestParameters.isMasterCompany, requestParameters.page, requestParameters.perPage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * CompanyDetailsApi - factory interface
 * @export
 */
export const CompanyDetailsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = CompanyDetailsApiFp(configuration)
    return {
        /**
         * Get all master company and component company details. If no pagination parameters specified, the default/max is applied. Permissions - UKG Pro service account must have \"View\" role for the \"Company Configuration Integration\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}).
         * @summary Get Company Details
         * @param {CompanyDetailsApiGetCompanyDetailsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCompanyDetails(requestParameters: CompanyDetailsApiGetCompanyDetailsRequest = {}, options?: AxiosRequestConfig): AxiosPromise<Array<CompanyDetails>> {
            return localVarFp.getCompanyDetails(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getCompanyDetails operation in CompanyDetailsApi.
 * @export
 * @interface CompanyDetailsApiGetCompanyDetailsRequest
 */
export type CompanyDetailsApiGetCompanyDetailsRequest = {
    
    /**
    * 5 character value represents a UKG Pro CompanyID
    * @type {string}
    * @memberof CompanyDetailsApiGetCompanyDetails
    */
    readonly companyId?: string
    
    /**
    * 5 character value represents a UKG Pro Master CompanyID
    * @type {string}
    * @memberof CompanyDetailsApiGetCompanyDetails
    */
    readonly masterCompanyId?: string
    
    /**
    * 5 character value represents a UKG Pro Company Code
    * @type {string}
    * @memberof CompanyDetailsApiGetCompanyDetails
    */
    readonly companyCode?: string
    
    /**
    * true/false values represent if this company is a UKG Pro Master Company
    * @type {string}
    * @memberof CompanyDetailsApiGetCompanyDetails
    */
    readonly isMasterCompany?: string
    
    /**
    * 
    * @type {number}
    * @memberof CompanyDetailsApiGetCompanyDetails
    */
    readonly page?: number
    
    /**
    * 
    * @type {number}
    * @memberof CompanyDetailsApiGetCompanyDetails
    */
    readonly perPage?: number
    
}

/**
 * CompanyDetailsApiGenerated - object-oriented interface
 * @export
 * @class CompanyDetailsApiGenerated
 * @extends {BaseAPI}
 */
export class CompanyDetailsApiGenerated extends BaseAPI {
    /**
     * Get all master company and component company details. If no pagination parameters specified, the default/max is applied. Permissions - UKG Pro service account must have \"View\" role for the \"Company Configuration Integration\" Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}).
     * @summary Get Company Details
     * @param {CompanyDetailsApiGetCompanyDetailsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CompanyDetailsApiGenerated
     */
    public getCompanyDetails(requestParameters: CompanyDetailsApiGetCompanyDetailsRequest = {}, options?: AxiosRequestConfig) {
        return CompanyDetailsApiFp(this.configuration).getCompanyDetails(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
